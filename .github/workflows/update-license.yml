name: Update License
on:
  schedule:
    - cron: '0 0 1 1 *'
  workflow_dispatch:
permissions:
  contents: read
concurrency: update-license
jobs:
  update-license:
    name: Update License
    runs-on: ${{vars.RUNS_ON}}
    timeout-minutes: 5
    strategy:
      matrix:
        branch:
          - main
          - release/jammy
          - release/focal
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{matrix.branch}}
      - name: Generate app token
        id: app-token
        uses: actions/create-github-app-token@v1.11.5
        with:
          app-id: ${{secrets.GH_APP_ID}}
          private-key: ${{secrets.GH_APP_PRIVATE_KEY}}
      - name: Determine info
        shell: bash
        id: info
        run: |
          REGEX='^(Copyright \(c\) )[0-9]{4}( Devon Powell)$'
          OLD_YEAR=$(grep -oEi "$REGEX" LICENSE | grep -oEi '[0-9]{4}')
          NEW_YEAR=$(date +%Y)
          UPDATE_TITLE="Bump \`LICENSE\` year from $OLD_YEAR to $NEW_YEAR"
          USER_NAME="$GH_APP_SLUG[bot]"
          USER_ID=$(gh api "/users/$USER_NAME" --jq .id)
          USER_EMAIL="$USER_ID+$USER_NAME@users.noreply.github.com"
          echo "replace-regex=$REGEX" >> $GITHUB_OUTPUT
          echo "license-year=$NEW_YEAR" >> $GITHUB_OUTPUT
          echo "update-title=$UPDATE_TITLE" >> $GITHUB_OUTPUT
          echo "update-body=$UPDATE_TITLE." >> $GITHUB_OUTPUT
          echo "commit-author=$USER_NAME <$USER_EMAIL>" >> $GITHUB_OUTPUT
        env:
          GH_APP_SLUG: ${{steps.app-token.outputs.app-slug}}
          GH_TOKEN: ${{steps.app-token.outputs.token}}
      - name: Update LICENSE
        run: sed -i -E "s/$REPLACE_REGEX/\1$LICENSE_YEAR\2/" LICENSE
        env:
          LICENSE_YEAR: ${{steps.info.outputs.license-year}}
          REPLACE_REGEX: ${{steps.info.outputs.replace-regex}}
      - name: Handle changes
        uses: peter-evans/create-pull-request@v7.0.6
        id: changes
        with:
          token: ${{steps.app-token.outputs.token}}
          commit-message: ${{steps.info.outputs.update-title}}
          author: ${{steps.info.outputs.commit-author}}
          committer: ${{steps.info.outputs.commit-author}}
          add-paths: LICENSE
          base: ${{matrix.branch}}
          branch: auto/${{matrix.branch}}/update-license
          delete-branch: true
          title: ${{steps.info.outputs.update-title}}
          body: ${{steps.info.outputs.update-body}}
          labels: auto
      - name: Enable auto-merge
        if: steps.changes.outputs.pull-request-operation == 'created'
        run: gh pr merge --auto --squash "$PULL_REQUEST_URL"
        env:
          PULL_REQUEST_URL: ${{steps.changes.outputs.pull-request-url}}
          GITHUB_TOKEN: ${{steps.app-token.outputs.token}}
