name: CI
on:
  workflow_call:
permissions:
  contents: read
env:
  IMAGE_TAG: localhost:5000/ci/base-ubuntu:latest
defaults:
  run:
    shell: bash
jobs:
  check-formatting-dockerfile:
    name: Check Formatting (Dockerfile)
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
      - name: Check formatting
        uses: hadolint/hadolint-action@v1.6.0
  check-formatting-markdown:
    name: Check Formatting (Markdown)
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
      - name: Check formatting
        uses: davidanson/markdownlint-cli2-action@v5.1.0
        with:
          globs: '**/*.md'
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      PLATFORMS: linux/amd64,linux/arm/v7,linux/arm64,linux/riscv64,linux/s390x
    services:
      registry:
        image: registry
        ports:
          - 5000:5000
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
        id: buildx
        with:
          driver-opts: network=host
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{hashFiles('Dockerfile', '.dockerignore', 'root/**')}}
          restore-keys: buildx-
      - name: Build image
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          builder: ${{steps.buildx.outputs.name}}
          tags: ${{env.IMAGE_TAG}}
          platforms: ${{env.PLATFORMS}}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
          push: true
      - name: Report image details
        run: |
          for PLATFORM in ${PLATFORMS//,/ }; do
            echo -e "\nPlatform: $PLATFORM\n"
            docker pull -q --platform=$PLATFORM ${{env.IMAGE_TAG}}
            docker image history \
              --format 'table {{.Size}}\t{{.CreatedBy}}' ${{env.IMAGE_TAG}}
            docker rmi -f ${{env.IMAGE_TAG}} > /dev/null 2>&1
          done
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs:
      - build
    env:
      IMAGE_TEST_TAG: localhost:5000/ci/base-ubuntu-test:latest
    services:
      registry:
        image: registry
        ports:
          - 5000:5000
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
        id: buildx
        with:
          driver-opts: network=host
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{hashFiles('Dockerfile', '.dockerignore', 'root/**')}}
          restore-keys: buildx-
      - name: Build image
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          builder: ${{steps.buildx.outputs.name}}
          tags: ${{env.IMAGE_TAG}}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
          push: true
      - name: Build test image
        uses: docker/build-push-action@v2.10.0
        with:
          context: ./test
          builder: ${{steps.buildx.outputs.name}}
          build-args: IMAGE_TAG=${{env.IMAGE_TAG}}
          tags: ${{env.IMAGE_TEST_TAG}}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
          load: true
      - name: Test
        run: >
          docker run --rm
          -e 'TZ=America/Toronto'
          -e 'PUID=9999' -e 'PGID=9999' -e 'SGID=10000,10001'
          ${{env.IMAGE_TEST_TAG}}
