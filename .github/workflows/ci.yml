name: CI
on:
  pull_request:
    branches: main
  push:
    branches: main
permissions:
  contents: read
jobs:
  check-formatting-dockerfile:
    name: Check Formatting (Dockerfile)
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Check formatting
        uses: hadolint/hadolint-action@v1.6.0
  check-formatting-markdown:
    name: Check Formatting (Markdown)
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container: ghcr.io/devpow112/markdownlint
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Check formatting
        shell: bash
        run: find . -type f -iname '*.md' -print0 | xargs -0 markdownlint
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      PLATFORMS: linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le
      CACHE_FROM: type=local,src=/tmp/.buildx-cache
      CACHE_TO: type=local,mode=max,dest=/tmp/.buildx-cache
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
        with:
          platforms: ${{env.PLATFORMS}}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0
        with:
          version: latest
      - name: Set up cache
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{hashFiles('Dockerfile', '.dockerignore', 'root/**')}}
          restore-keys: buildx-
      - name: Build image
        uses: docker/build-push-action@v2.7.0
        with:
          builder: ${{steps.buildx.outputs.name}}
          context: .
          platforms: ${{env.PLATFORMS}}
          cache-from: ${{env.CACHE_FROM}}
          cache-to: ${{env.CACHE_TO}}
          push: false
