name: CI
on: workflow_call
defaults:
  run:
    shell: bash
env:
  TEMP_IMAGE: localhost:5000/base-ubuntu
  ARTIFACT_PREFIX: base-ubuntu-ci
jobs:
  check-formatting-dockerfile:
    name: Check Formatting (Dockerfile)
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Check formatting
        uses: hadolint/hadolint-action@v3.1.0
  check-formatting-markdown:
    name: Check Formatting (Markdown)
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Check formatting
        uses: davidanson/markdownlint-cli2-action@v18.0.0
        with:
          globs: '**/*.md'
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      PLATFORMS: linux/amd64,linux/arm/v7,linux/arm64,linux/s390x,linux/ppc64le
    services:
      registry:
        image: registry
        ports:
          - 5000:5000
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0
        with:
          platforms: ${{env.PLATFORMS}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0
        id: buildx
        with:
          driver-opts: network=host
      - name: Determine info
        id: info
        run: |
          echo "base-image-tag=$TEMP_IMAGE:base-image" >> $GITHUB_OUTPUT
          echo "test-image-tag=$TEMP_IMAGE:test" >> $GITHUB_OUTPUT
      - name: Build image
        uses: docker/build-push-action@v6.10.0
        id: image
        with:
          context: .
          builder: ${{steps.buildx.outputs.name}}
          platforms: ${{env.PLATFORMS}}
          tags: ${{steps.info.outputs.base-image-tag}}
          cache-from: type=gha,scope=nocachefilter
          cache-to: type=gha,scope=nocachefilter,mode=max
          push: true
      - name: Build test image
        uses: docker/build-push-action@v6.10.0
        with:
          context: ./test
          builder: ${{steps.buildx.outputs.name}}
          build-contexts: |
            base-image:ci=docker-image://${{steps.info.outputs.base-image-tag}}
          platforms: ${{env.PLATFORMS}}
          tags: ${{steps.info.outputs.test-image-tag}}
          cache-from: type=gha,scope=nocachefilter
          cache-to: type=gha,scope=nocachefilter,mode=max
          push: true
      - name: Test
        run: >
          for PLATFORM in ${PLATFORMS//,/ }; do
            echo '::group::Testing: $PLATFORM'
            docker run --rm \
              --platform "$PLATFORM"
              -e 'TZ=America/Toronto'
              -e 'PUID=9999' -e 'PGID=9999' -e 'SGID=10000,10001'
              "$TEST_IMAGE_TAG"
            echo '::endgroup::'
          done
        env:
          TEST_IMAGE_TAG: ${{steps.info.outputs.test-image-tag}}
      # - name: Hide outdated build details comment
      #   uses: int128/hide-comment-action@v1.37.0
      #   if: github.event_name == 'pull_request'
      #   with:
      #     starts-with: <!-- build details ${{matrix.platform}} -->
      # - name: Determine build details
      #   id: details
      #   if: github.event_name == 'pull_request'
      #   run: |
      #     VERSION=$(grep -E '^FROM ubuntu:[a-z]+-[0-9]+$' Dockerfile)
      #     VERSION=${VERSION##*:}
      #     STREAM=${VERSION%-*}
      #     CURRENT_IMAGE_TAG=$CURRENT_IMAGE:$STREAM
      #     set +e
      #     EXISTS_OUTPUT=$(
      #       docker buildx imagetools inspect $CURRENT_IMAGE_TAG 2> /dev/null
      #     )
      #     EXISTS_RESULT="$?"
      #     set -e
      #     if [[ "$EXISTS_OUTPUT" == "" || "$EXISTS_RESULT" -ne 0 ]]; then
      #       echo "Stream tag '$STREAM' does not exist, using latest tag"
      #       CURRENT_IMAGE_TAG=$CURRENT_IMAGE:latest
      #     fi
      #     docker pull --platform=$PLATFORM $NEW_IMAGE_TAG
      #     SIZE_NEW=$(docker inspect -f '{{.Size}}' $NEW_IMAGE_TAG)
      #     DETAILS=$(
      #       docker image history --format \
      #       'table | {{.Size}} | {{.CreatedBy}} |' $NEW_IMAGE_TAG
      #     )
      #     DETAILS=${DETAILS#*$'\n'}
      #     docker rmi -f $NEW_IMAGE_TAG
      #     if docker pull --platform=$PLATFORM $CURRENT_IMAGE_TAG; then
      #       SIZE_CURRENT=$(docker inspect -f '{{.Size}}' $CURRENT_IMAGE_TAG)
      #     else
      #       SIZE_CURRENT=$SIZE_NEW
      #     fi
      #     echo "Size new: $SIZE_NEW"
      #     echo "Size old: $SIZE_CURRENT"
      #     if (( $SIZE_NEW == $SIZE_CURRENT )); then
      #       echo 'changes=false' >> $GITHUB_OUTPUT
      #       exit 0
      #     fi
      #     SIZE_DIFF=$(( SIZE_NEW - SIZE_CURRENT ))
      #     SIZE_NEW_FORMATTED=$(
      #       echo $SIZE_NEW | numfmt --to=iec --suffix=B --format='%.2f'
      #     )
      #     SIZE_CURRENT_FORMATTED=$(
      #       echo $SIZE_CURRENT | numfmt --to=iec --suffix=B --format='%.2f'
      #     )
      #     SIZE_DIFF_FORMATTED=$(
      #       echo "$(( SIZE_NEW - SIZE_CURRENT ))" |
      #       numfmt --to=iec --suffix=B --format='%.2f'
      #     )
      #     if (( $SIZE_NEW > $SIZE_CURRENT )); then
      #       SIZE_DIFF_FORMATTED="+$SIZE_DIFF_FORMATTED"
      #     fi
      #     echo 'changes=true' >> $GITHUB_OUTPUT
      #     echo "size-new-raw=$SIZE_NEW" >> $GITHUB_OUTPUT
      #     echo "size-new-formatted=$SIZE_NEW_FORMATTED" >> $GITHUB_OUTPUT
      #     echo "size-current-raw=$SIZE_CURRENT" >> $GITHUB_OUTPUT
      #     echo "size-current-formatted=$SIZE_CURRENT_FORMATTED" >> $GITHUB_OUTPUT
      #     echo "size-difference-raw=$SIZE_DIFF" >> $GITHUB_OUTPUT
      #     echo "size-difference-formatted=$SIZE_DIFF_FORMATTED" >> $GITHUB_OUTPUT
      #   env:
      #     PLATFORM: ${{matrix.platform}}
      #     CURRENT_IMAGE: ghcr.io/${{github.repository_owner}}/base-ubuntu
      #     NEW_IMAGE_TAG: localhost:5000/base-image:ci
      # - name: Post build details comment
      #   uses: peter-evans/create-or-update-comment@v4.0.0
      #   if: >
      #     github.event_name == 'pull_request' &&
      #     steps.details.outputs.changes == 'true'
      #   with:
      #     issue-number: ${{github.event.pull_request.number}}
      #     body: |
      #       <!-- build details ${{matrix.platform}} -->

      #       ## Build Details (`${{matrix.platform}}`)

      #       | | Difference | New | Current |
      #       | --- | --- | --- | --- |
      #       | Size | `${{steps.details.outputs.size-difference-formatted}}` (`${{steps.details.outputs.size-difference-raw}}B`) | `${{steps.details.outputs.size-new-formatted}}` (`${{steps.details.outputs.size-new-raw}}B`) | `${{steps.details.outputs.size-current-formatted}}` (`${{steps.details.outputs.size-current-raw}}B`) |
